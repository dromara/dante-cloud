version: '3.8'
services:

  nacos:
    image: quay.io/herodotus-cloud/nacos-server:v3.0.2
    # image: herodotus/nacos-server:v3.0.2
    container_name: dante-nacos
    hostname: dante-nacos
    environment:
      MODE: standalone
#      SPRING_DATASOURCE_PLATFORM: mysql
#      MYSQL_SERVICE_HOST: dante-mysql
#      MYSQL_SERVICE_PORT: 3306
#      MYSQL_SERVICE_USER: nacos
#      MYSQL_SERVICE_PASSWORD: nacos
#      MYSQL_SERVICE_DB_NAME: nacos
#      MYSQL_SERVICE_DB_PARAM: characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&allowPublicKeyRetrieval=true&serverTimezone=GMT%2B8
      SPRING_DATASOURCE_PLATFORM: postgresql
      POSTGRESQL_SERVICE_HOST: 192.168.101.10
      POSTGRESQL_SERVICE_PORT: 15432
      POSTGRESQL_SERVICE_USER: nacos
      POSTGRESQL_SERVICE_PASSWORD: nacos
      POSTGRESQL_SERVICE_DB_NAME: nacos
      POSTGRESQL_SERVICE_DB_PARAM: tcpKeepAlive=true&reWriteBatchedInserts=true&ApplicationName=nacos
      NACOS_AUTH_IDENTITY_KEY: serverIdentity
      NACOS_AUTH_IDENTITY_VALUE: security
      NACOS_AUTH_TOKEN: SecretKey012345678901234567890123456789012345678901234567890123456789
    volumes:
      - ~/docker-volumes/nacos/data:/home/nacos/data
    ports:
      - "8849:8080"
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"

    depends_on:
      - dante-mysql
      - dante-redis

  mysql:
    image: mysql:8.0
    container_name: dante-mysql
    hostname: dante-mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=example
      - MYSQL_DATABASE=nacos
      - MYSQL_USER=nacos
      - MYSQL_PASSWORD=nacos
    volumes:
      - mysql_data:/var/lib/mysql
      - ~/docker-volumes/mysql/conf.d:/etc/mysql/conf.d
      - ~/docker-volumes/mysql/initdb:/docker-entrypoint-initdb.d
    networks:
      - dante-network

  redis:
    image: redis:6.0
    container_name: dante-redis
    hostname: dante-redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
      - ~/docker-volumes/redis/etc/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - dante-network

  zookeeper:
    image: zookeeper:3.8
    container_name: dante-zookeeper
    hostname: dante-zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
      - "28080:8080"
    networks:
      - dante-network

  kafka:
    image: docker.io/bitnami/kafka:3.5
    container_name: dante-kafka
    hostname: dante-kafka
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - dante-network

  postgres:
    image: postgres:14
    container_name: dante-postgres
    hostname: dante-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ~/docker-volumes/postgres/initdb:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=example
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - dante-network


volumes:
  mysql_data:
  redis_data:
  kafka_data:
  postgres_data:

networks:
  dante-network: